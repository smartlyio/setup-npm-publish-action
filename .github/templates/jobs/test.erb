test:
  runs-on: <%= ubuntu_version %>
  env:
    EMAIL_INPUT: test@example.com
    USERNAME_INPUT: example-test
  steps:
  @import ../steps/test_prepare
  - uses: webiny/action-post-run@3.0.0
    with:
      run: .github/scripts/test_post.sh
  @import ../steps/test_execute

test-multiple-times:
  runs-on: <%= ubuntu_version %>
  env:
    EMAIL_INPUT: test@example.com
    USERNAME_INPUT: example-test
  steps:
  @import ../steps/test_prepare
  - uses: webiny/action-post-run@3.0.0
    with:
      run: .github/scripts/test_post.sh
  - name: Test executing the action first time
    uses: ./
    env:
      AUTH_TOKEN_STRING: |
        //example.com/npm:_authToken=token-1
        email = devops@smartly.io
    with:
      email: ${{ env.EMAIL_INPUT }}
      username: ${{ env.USERNAME_INPUT }}
  - name: Validate initial config
    env:
      EXPECTED_TOKEN: "token-1"
    run: |
      grep "^\/\/example.com\/npm:_authToken=$EXPECTED_TOKEN" .npmrc
      count="$(grep "^\/\/example.com\/npm:_authToken=" .npmrc | wc -l)"
      [ "$count" -eq 1 ]
  @import ../steps/test_execute (auth_token: "second-time")

test-cleanup-non-repo:
  runs-on: <%= ubuntu_version %>
  env:
    EMAIL_INPUT: test@example.com
    USERNAME_INPUT: example-test
  steps:
  @import ../steps/test_prepare
  - uses: webiny/action-post-run@3.0.0
    with:
      run: .github/scripts/test_missing_npmrc_post.sh
  @import ../steps/test_execute
  - run: rm -rf .git

test-missing-npmrc:
  runs-on: <%= ubuntu_version %>
  env:
    EMAIL_INPUT: test@example.com
    USERNAME_INPUT: example-test
  steps:
  @import ../steps/test_prepare
  - run: |
      git config --global user.email "fake@fake.com"
      git config --global user.name "Testing"
      git rm .npmrc
      git commit -m "mark removed npmrc file"
  - uses: webiny/action-post-run@3.0.0
    with:
      run: .github/scripts/test_missing_npmrc_post.sh
  @import ../steps/test_execute

test-all:
  needs:
    - test
    - test-cleanup-non-repo
    - test-missing-npmrc
  runs-on: <%= ubuntu_version %>
  steps:
    - run: |
        echo "Ok"
      shell: bash
